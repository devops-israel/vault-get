# workspace:
#   base: /go
#   path: src/bitbucket.org/joshdvir/vault-get

# pipeline:
#   build:
#     image: golang:1.8
#     pull: true
#     environment:
#       - VERSION=0.8.0
#     commands:
#       - apt-get update && apt-get install -y upx
#       - mkdir /go/bin
#       - mkdir -p prod
#       - mkdir -p dist
#       - curl https://glide.sh/get | sh
#       - go get github.com/mitchellh/gox
#       - go get github.com/tcnksm/ghr
#       - glide install
#       - glide update
#       - gox -osarch-list
#       - CGO_ENABLED=0 gox -ldflags "-s -w" -output "dist/vault-get-{{.OS}}-{{.Arch}}"
#       - upx --help
#       - upx -9 --best dist/vault-get-linux-386
#       - upx -9 --best dist/vault-get-linux-amd64
#       - upx -9 --best dist/vault-get-linux-arm
#       - ghr -t $GITHUB_TOKEN --replace -u devops-israel -r vault-get v$VERSION dist/
#     secrets: [ github_token ]

---
kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

steps:
- name: build
  pull: always
  image: golang:1.8
  commands:
  - "apt-get update && apt-get install -y upx"
  - mkdir /go/bin
  - mkdir -p prod
  - mkdir -p dist
  - "curl https://glide.sh/get | sh"
  - go get github.com/mitchellh/gox
  - go get github.com/tcnksm/ghr
  - glide install
  - glide update
  - gox -osarch-list
  - "CGO_ENABLED=0 gox -ldflags \"-s -w\" -output \"dist/vault-get-{{.OS}}-{{.Arch}}\""
  - upx --help
  - upx -9 --best dist/vault-get-linux-386
  - upx -9 --best dist/vault-get-linux-amd64
  - upx -9 --best dist/vault-get-linux-arm
  - ghr -t $GITHUB_TOKEN --replace -u devops-israel -r vault-get v$VERSION dist/
  environment:
    VERSION: 1.0.0
    github_token:
      from_secret: github_token

---
kind: secret
name: github_token
get:
  path: drone/data/github
  name: token